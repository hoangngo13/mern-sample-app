{"version":3,"sources":["components/DeleteBtn/DeleteBtn.js","components/Jumbotron/Jumbotron.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/List/List.js","components/List/ListItem.js","components/Form/Input.js","components/Form/FormBtn.js","pages/Books/Books.js","pages/Detail/Detail.js","pages/NoMatch/NoMatch.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["DeleteBtn","props","className","Jumbotron","children","style","height","clear","axios","get","id","delete","bookData","post","Col","size","split","map","join","Container","fluid","Row","List","ListItem","Input","FormBtn","float","marginBottom","Books","state","books","title","author","loadBooks","API","then","res","setState","data","catch","err","console","log","deleteBook","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","this","onChange","placeholder","disabled","onClick","length","book","key","_id","to","Component","Detail","match","params","NoMatch","role","aria-label","Nav","href","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fac8d1dc.chunk.js","sourcesContent":["import React from 'react';\nimport './DeleteBtn.css';\n\nconst DeleteBtn = props => (\n    <span className=\"delete-btn\" {...props}>\n        ✗\n    </span>\n);\n\nexport default DeleteBtn;","import React from \"react\";\n\nconst Jumbotron = ({ children }) => (\n  <div style={{ height: 300, clear: \"both\" }} className=\"jumbotron\">\n    {children}\n  </div>\n);\n\nexport default Jumbotron;\n","import axios from 'axios';\n\nexport default {\n    // Gets all books\n    getBooks: function () {\n        return axios.get('/api/books');\n    },\n    // Gets the book with the given id\n    getBook: function (id) {\n        return axios.get('/api/books/' + id);\n    },\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axios.delete('/api/books/' + id);\n    },\n    // Saves a book to the database\n    saveBook: function (bookData) {\n        return axios.post('/api/books', bookData);\n    }\n};","import React from \"react\";\n\nexport const Col = ({ size, children }) => (\n  <div className={size.split(\" \").map(size => \"col-\" + size).join(\" \")}>\n    {children}\n  </div>\n);\n","import React from \"react\";\n\nexport const Container = ({ fluid, children }) => (\n  <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\n    {children}\n  </div>\n);\n","import React from \"react\";\n\nexport const Row = ({ fluid, children }) => (\n  <div className={`row${fluid ? \"-fluid\" : \"\"}`}>\n    {children}\n  </div>\n);\n","import React from \"react\";\nimport \"./List.css\";\n\nexport const List = ({ children }) => {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">\n        {children}\n      </ul>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ListItem = props => (\n  <li className=\"list-group-item\">\n    {props.children}\n  </li>\n);\n","import React from \"react\";\n\nexport const Input = props => (\n  <div className=\"form-group\">\n    <input className=\"form-control\" {...props} />\n  </div>\n);\n","import React from \"react\";\n\nexport const FormBtn = props => (\n  <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n    {props.children}\n  </button>\n);\n","import React, { Component } from 'react';\nimport DeleteBtn from '../../components/DeleteBtn';\nimport Jumbotron from '../../components/Jumbotron';\nimport API from '../../utils/API';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from '../../components/Grid';\nimport { List, ListItem } from '../../components/List';\nimport { Input, FormBtn } from '../../components/Form';\n\nclass Books extends Component {\n    state = {\n        books: [],\n        title: '',\n        author: ''\n    };\n\n    componentDidMount() {\n        this.loadBooks();\n    }\n\n    loadBooks = () => {\n        API.getBooks()\n            .then(res => this.setState({ books: res.data, title: '', author: '' }))\n            .catch(err => console.log(err));\n    };\n\n    deleteBook = id => {\n        API.deleteBook(id)\n            .then(res => this.loadBooks())\n            .catch(err => console.log(err));\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.title && this.state.author) {\n            API.saveBook({\n                title: this.state.title,\n                author: this.state.author\n            })\n                .then(res => this.loadBooks())\n                .catch(err => console.log(err));\n        }\n    };\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-6\">\n                        <Jumbotron>\n                            <h1>What Books Should I Read?</h1>\n                        </Jumbotron>\n                        <form>\n                            <Input\n                                value={this.state.title}\n                                onChange={this.handleInputChange}\n                                name=\"title\"\n                                placeholder=\"Title (required)\"\n                            />\n                            <Input\n                                value={this.state.author}\n                                onChange={this.handleInputChange}\n                                name=\"author\"\n                                placeholder=\"Author (required)\"\n                            />\n\n                            <FormBtn\n                                disabled={!(this.state.author && this.state.title)}\n                                onClick={this.handleFormSubmit}\n                            >\n                                Submit Book\n\t\t\t\t\t\t\t</FormBtn>\n                        </form>\n                    </Col>\n                    <Col size=\"md-6 sm-12\">\n                        <Jumbotron>\n                            <h1>Books On My List</h1>\n                        </Jumbotron>\n                        {this.state.books.length ? (\n                            <List>\n                                {this.state.books.map(book => (\n                                    <ListItem key={book._id}>\n                                        <Link to={'/books/' + book._id}>\n                                            <strong>\n                                                {book.title} by {book.author}\n                                            </strong>\n                                        </Link>\n                                        <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        ) : (\n                                <h3>No Results to Display</h3>\n                            )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Books;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Container } from '../../components/Grid';\nimport Jumbotron from '../../components/Jumbotron';\nimport API from '../../utils/API';\n\nclass Detail extends Component {\n    state = {\n        book: {}\n    };\n\n    componentDidMount() {\n        API.getBook(this.props.match.params.id)\n            .then(res => this.setState({ book: res.data }))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>\n                                {this.state.book.title} by {this.state.book.author}\n                            </h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col size=\"md-2\">\n                        <Link to=\"/\">← Back to Authors</Link>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Detail;","import React from \"react\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nconst NoMatch = () => (\n  <Container fluid>\n    <Row>\n      <Col size=\"md-12\">\n        <Jumbotron>\n          <h1>404 Page Not Found</h1>\n          <h1>\n            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n              🙄\n            </span>\n          </h1>\n        </Jumbotron>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NoMatch;","import React from 'react';\n\nconst Nav = () => (\n    <nav className=\"navbar navbar-inverse navbar-top\">\n        <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    React Reading List\n\t\t\t\t</a>\n            </div>\n        </div>\n    </nav>\n);\n\nexport default Nav;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Books from './pages/Books';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Nav from './components/Nav';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Books} />\n        <Route exact path=\"/books\" component={Books} />\n        <Route exact path=\"/books/:id\" component={Detail} />\n        <Route component={NoMatch} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}